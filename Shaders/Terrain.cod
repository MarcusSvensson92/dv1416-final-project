//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerFrame
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldViewProj;            // Offset:   64, size:   64
    float3  gCameraPosition;            // Offset:  128, size:   12
    float3  gTargetPosition;            // Offset:  144, size:   12
}

//
// 2 local object(s)
//
RasterizerState wireframeRS
{
    FillMode = uint(WIREFRAME /* 2 */);
};
SamplerState linearSampler
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 RenderTech
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:   64 Size:    64
                //   float3 gCameraPosition;            // Offset:  128 Size:    12 [unused]
                //   float3 gTargetPosition;            // Offset:  144 Size:    12 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEX                      0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEX                      0   xy          3     NONE  float   xy  
                //
                vs_4_0
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 4
                
                #line 40 "C:\Users\Marcus\Desktop\dv1416-final-project\Shaders\Terrain.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // output<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // output<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // output<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[7].xyzw  // output<3:NaN:Inf>
                dp3 r0.x, v0.xyzx, cb0[0].xyzx  // output<4:NaN:Inf>
                dp3 r0.y, v0.xyzx, cb0[1].xyzx  // output<5:NaN:Inf>
                dp3 r0.z, v0.xyzx, cb0[2].xyzx  // output<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[0].xyzx  // output<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[1].xyzx  // output<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[2].xyzx  // output<9:NaN:Inf>
                mov r3.xy, v2.xyxx  // output<10,11>
                mov o0.xyzw, r1.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r0.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r3.xyxx  // VS<10,11>
                ret 
                // Approximately 18 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:   64 Size:    64 [unused]
                //   float3 gCameraPosition;            // Offset:  128 Size:    12 [unused]
                //   float3 gTargetPosition;            // Offset:  144 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   x z 
                // NORMAL                   0   xyz         2     NONE  float       
                // TEX                      0   xy          3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[10], immediateIndexed
                dcl_input_ps linear v1.xz
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 51 "C:\Users\Marcus\Desktop\dv1416-final-project\Shaders\Terrain.fx"
                add r0.x, cb0[9].x, l(5.000000)
                ge r0.x, r0.x, v1.x
                add r0.y, cb0[9].x, l(-5.000000)
                ge r0.y, v1.x, r0.y
                and r0.x, r0.y, r0.x
                add r0.y, cb0[9].z, l(5.000000)
                ge r0.y, r0.y, v1.z
                and r0.x, r0.y, r0.x
                add r0.y, cb0[9].z, l(-5.000000)
                ge r0.y, v1.z, r0.y
                and r0.x, r0.y, r0.x
                if_nz r0.x
                
                #line 55
                  mov o0.xyzw, l(1.000000,0,0,1.000000)  // PS<0: 1f,1: 0f,2: 0f,3: 1f>
                  ret 
                
                #line 51
                else 
                
                #line 57
                  mov o0.xyzw, l(0,0,0,1.000000)  // PS<0: 0f,1: 0f,2: 0f,3: 1f>
                  ret 
                
                #line 51
                endif 
                ret 
                // Approximately 19 instruction slots used
                            
            };
            RasterizerState = wireframeRS;
        }

    }

}

